set nocompatible

syntax on

if has ('autocmd')
  filetype plugin indent on
endif

" SPACES

set tabstop=2
set softtabstop=2
set shiftwidth=2
set expandtab "replate tab to space

set listchars+=tab:\ ▸
set listchars+=trail:·
set listchars+=space:· "Hidden space character
set listchars+=eol:↴
set listchars+=nbsp:_

set list

" UI CONFIG

set autoindent
set backspace=indent
set backspace+=eol
set backspace+=start

set cursorline
set wildmenu
set showmatch
set colorcolumn=80
" autocmd VimResized * if (&columns > 80) | set columns=80 | endif
set wrap
set linebreak
set showbreak=▸▸▸

" SEARCHING

set incsearch
set hlsearch
set ignorecase

" FOLDING

set foldenable
set foldlevelstart=10

" BACKUP CONFIG

set backupdir=~/.vim/backup
set backupskip=/tmp/*
set backupskip+=/private/tmp/*
set directory=~/.vim/swaps
set undodir=~/.vim/undos

" AUTOREAD
set autoread
au CursorHold * checktime

" VIM PLUGINS

filetype off
set rtp +=~/.vim/bundle/Vundle.vim
call vundle#begin()
  Plugin 'vundlevim/vundle.vim'
  Plugin 'editorconfig/editorconfig-vim'
  Plugin 'scrooloose/nerdtree'
  Plugin 'arcticicestudio/nord-vim'
  Plugin 'morhetz/gruvbox'
  Plugin 'dracula/vim'
  Plugin 'joshdick/onedark.vim'
  Plugin 'vim-airline/vim-airline'
  "Syntax
  Plugin 'w0rp/ale'
  Plugin 'ap/vim-css-color'
  Plugin 'shougo/neocomplcache.vim'
  Plugin 'shougo/neosnippet'
  Plugin 'shougo/neosnippet-snippets'
  Plugin 'digitaltoad/vim-pug'
  Plugin 'JulesWang/css.vim'
  Plugin 'wavded/vim-stylus'
  Plugin 'neovimhaskell/haskell-vim'
  Plugin 'elzr/vim-json'
  Plugin 'fatih/vim-go'
  Plugin 'godlygeek/tabular'
  Plugin 'plasticboy/vim-markdown'
  Plugin 'evanmiller/nginx-vim-syntax'
  Plugin 'pangloss/vim-javascript'
  Plugin 'cakebaker/scss-syntax.vim'
  Plugin 'othree/html5.vim'
  Plugin 'mxw/vim-jsx'
  Plugin 'jiangmiao/auto-pairs'
  " Tools
  Plugin 'mattn/emmet-vim'
  Plugin 'airblade/vim-gitgutter'
  Plugin 'tpope/vim-surround'
  Plugin 'tpope/vim-fugitive'
  Plugin 'tpope/vim-repeat'
  Plugin 'tpope/vim-commentary'
  Plugin 'mattn/webapi-vim'
  Plugin 'mattn/gist-vim'
call vundle#end()
filetype plugin indent on

" CONFIG COLOR THEME AND FONT
"set term=screen-256color
set termguicolors
set laststatus=2
syntax enable
set background=dark
" let g:gruvbox_contrast_light='medium'
" let g:gruvbox_italic=0
colorscheme onedark

" ALE SYNTAXE
function ALE() abort
  return exists('*ALEGetStatusLine') ? ALEGetStatusLine() : ''
endfunction
set statusline+=%{ALE()}
let g:ale_statusline_format = ['⨉ %d', '⚠ %d', '⬥ ok']

" CENTER CURSOR ON VIM 
set scrolloff=999

" AIRLINE
let g:airline_powerline_fonts = 1
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#show_buffers = 0
let g:airline#extensions#tabline#show_tabs = 1
let g:airline#extensions#tabline#fnamemod = ':t'
" let g:airline#extensions#tabline#left_sep = ' '
" let g:airline#extensions#tabline#left_alt_sep = '|s'
let g:airline_section_error = '%{ALE()}'
let g:airline_theme='onedark'

" JSX CONFI
let g:jsx_ext_required = 0

"NERD TREE CONFIG
let g:NERDTreeDirArrowExpandable = '▸'
let g:NERDTreeDirArrowCollapsible = '▾'
let NERDTreeShowHidden=1
map <C-n> :NERDTreeToggle<CR>

" NEOCOMPLETE CONFG
" Enable `neocomplcache` by default
" https://github.com/Shougo/neocomplcache.vim#installation
let g:neocomplcache_enable_at_startup=1
let g:neocomplete#enable_fuzzy_completion=1
if !exists('g:neocomplete#force_omni_input_patterns')
  let g:neocomplete#force_omni_input_patterns = {}
endif
let g:neocomplete#force_omni_input_patterns.python =
  \'\%([^. \t]\.\|^\s*@\|^\s*from\s.\+import \|^\s*from
  \|^\s*import
  \)\w*'

" GITGUTTER
set updatetime=250
nmap ]h <Plug>GitGutterNextHunk
nmap [h <Plug>GitGutterPrevHunk


" RELATIVE NUMBER
function! NumberToggle()
  if(&relativenumber)
    set number
    set nornu
  else
    set relativenumber
    set nonu
  endif
endfunc

map <C-m> :call NumberToggle()<CR>
